# This file contains a GraphQL query that will be executed and the result provided to
# your JSS component. You can run this query in GraphiQL ($endpoint/ui) for a nice editing experience.

# Note that we're executing _two queries_ (datasource and contextItem)
# within the context of the IntegratedDemoQuery _operation_. This makes it
# very efficient at gathering data from multiple sources.

query Navigation($datasource: String!, $contextItem: String!) {
  # Datasource query
  # $datasource will always be set to the ID of the rendering's datasource item
  # (as long as the GraphQLData helper is used)
  datasource(value: $datasource) {
    id
    name
    # Strongly-typed querying on known templates is possible!
    ... on Navigation {
      # Single-line text field
      title {
        # the 'jss' field is a JSON blob that represents the object that
        # should be passed to JSS field rendering helpers (i.e. text, image, link)
        jss
        value
      }
      manchet {
        jss
        value
      }
      logo {
        jss
        value
      }
    }
  }

  # Context/route item query
  # $contextItem will always be set to the ID of the current context item (the route item)
  # (as long as the GraphQLData helper is used)
  contextItem: item(path: $contextItem) {
    id
    url(options: { disableLanguageEmbedding: true })

    # List the children of the current route
    children(requirePresentation: false) {
      id
      url(options: { disableLanguageEmbedding: true })
      name
    }
  }

  home: item(path: "/sitecore/content/blogsite/home") {
    id
    url(options: { disableLanguageEmbedding: true })

    children(requirePresentation: true) {
      id
      url(options: { disableLanguageEmbedding: true })
      name
    }
  }
}
